"""empty message

Revision ID: 5cfde7c8c588
Revises: 6f1cf36079e1
Create Date: 2021-01-31 16:49:54.971499

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5cfde7c8c588'
down_revision = '6f1cf36079e1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('article_category_m',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('update_time', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Column('name', sa.String(length=500), nullable=True)),
    sa.Column('extra', sa.String(length=500), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('update_time', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_constraint('users_role_id_fkey', 'users', type_='foreignkey')
    op.drop_table('roles')
    op.add_column('access_log', sa.Column('create_time', sa.TIMESTAMP(), nullable=True))
    op.add_column('access_log', sa.Column('request_method', sa.String(length=20), nullable=True))
    op.add_column('access_log', sa.Column('update_time', sa.TIMESTAMP(), nullable=True))
    op.drop_column('access_log', 'time')
    op.add_column('tags', sa.Column('article_id', sa.Integer(), nullable=True))
    op.add_column('tags', sa.Column('create_time', sa.TIMESTAMP(), nullable=True))
    op.add_column('tags', sa.Column('name', sa.String(length=500), nullable=True))
    op.add_column('tags', sa.Column('update_time', sa.TIMESTAMP(), nullable=True))
    op.drop_column('tags', 'tags_name')
    op.add_column('users', sa.Column('create_time', sa.TIMESTAMP(), nullable=True))
    op.add_column('users', sa.Column('update_time', sa.TIMESTAMP(), nullable=True))
    op.drop_column('users', 'role_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('users_role_id_fkey', 'users', 'roles', ['role_id'], ['id'])
    op.drop_column('users', 'update_time')
    op.drop_column('users', 'create_time')
    op.add_column('tags', sa.Column('tags_name', sa.VARCHAR(length=30), autoincrement=False, nullable=False))
    op.drop_column('tags', 'update_time')
    op.drop_column('tags', 'name')
    op.drop_column('tags', 'create_time')
    op.drop_column('tags', 'article_id')
    op.add_column('access_log', sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('access_log', 'update_time')
    op.drop_column('access_log', 'request_method')
    op.drop_column('access_log', 'create_time')
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    sa.UniqueConstraint('name', name='roles_name_key')
    )
    op.drop_table('category')
    op.drop_table('article_category_m')
    # ### end Alembic commands ###
